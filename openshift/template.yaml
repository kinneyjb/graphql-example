apiVersion: v1
kind: Template
metadata:
  name: graphql-example
objects:

- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      app: graphql-example
    name: graphql-example

- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      app: graphql-example
    name: graphql-example
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: graphql-example:latest
    source:
      git:
        ref: master
        uri: https://github.com/kinneyjb/graphql-example.git
      type: Git
    strategy:
      sourceStrategy:
        env:
        - name: APP_MODULE
          value: app.wsgi:application
        from:
          kind: ImageStreamTag
          name: python:3.6
          namespace: openshift
      type: Source
    triggers:
    - imageChange: {}
      type: ImageChange
    - type: ConfigChange

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: graphql-example
    name: graphql-example
  spec:
    replicas: 1
    selector:
      deploymentconfig: graphql-example
    strategy:
      type: Rolling
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
    template:
      metadata:
        labels:
          app: graphql-example
          deploymentconfig: graphql-example
      spec:
        containers:
        - image: graphql-example:latest
          imagePullPolicy: Always
          name: graphql-example
          ports:
          - containerPort: 8080
            protocol: TCP
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - graphql-example
        from:
          kind: ImageStreamTag
          name: graphql-example:latest
          namespace: poc
      type: ImageChange
    - type: ConfigChange

- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: graphql-example
    name: graphql-example
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      deploymentconfig: graphql-example
    sessionAffinity: None
    type: ClusterIP

- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: graphql-example
    name: graphql-example
  spec:
    port:
      targetPort: 8080-tcp
    to:
      kind: Service
      name: graphql-example
